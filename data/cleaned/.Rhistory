#  out.dta[j,8,i]  - 7 Day moving average of COVID deaths (computed based on data)                                   #
#  out.dta[j,9,i]  - COVID death rate per 100,000 (computed from original data)                                      #
#  out.dta[j,10,i] - Speed Number of new reported COVID cases (is this the same as [2] - new_cases_orig?)            #
#  out.dta[j,11,i] - Change in new cases, not reported but used to report acceleration                               #
#  out.dta[j,12,i] - Average acceleration over the past seven days                                                   #
#  out.dta[j,13,i] - Change in change (to compute the jerk), not reported                                            #
#  out.dta[j,14,i] - Jerk - change in acceleration                                                                   #'
#  out.dta[j,15,i] - 1 Day Persistance Effect                                                                        #
#  out.dta[j,16,i] - 7 Day Persistance Effect                                                                        #
#
ibeg <- first.date - 15                                                                                          # First date for constructing of the surveillance table
iend <- last.date                                                                                                # Last date for construction of the surveillance table
l.end <- iend-ibeg+1                                                                                             # End point of loops
out.dates    <- seq(ibeg,iend,1)                                                                                 # Sequence of output dates
out.dta      <- matrix(0,length(out.dates),(length(cntlst.2)*17))                                                # Output data
dim(out.dta) <- c(length(out.dates),17,length(cntlst.2))                                                         # 3 - dimensional array
for(i in 1:(length(cntlst.2)-1)) {                                                                               ###########
for(j in 1:l.end) out.dta[j,1,i]  <- out.dates[j]                                                                        # Sample Date
for(j in 1:l.end) out.dta[j,2,i]  <- dta[(dta$Country == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Cases.Daily"]        # New Cases
for(j in 1:l.end) out.dta[j,3,i]  <- dta[(dta$Country == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Total.Cases"]        # Cumulative Cases
for(j in 8:l.end) out.dta[j,4,i]  <- (out.dta[j,2,i] + out.dta[j-1,2,i] + out.dta[j-2,2,i] + out.dta[j-3,2,i] +          # 7 Day Moving Average of New Cases
out.dta[j-4,2,i] + out.dta[j-5,2,i] + out.dta[j-6,2,i])/7.0                        #
for(j in 1:l.end) out.dta[j,5,i]  <- dta[(dta$Country == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Pos.Rate"]           # Rate of new infections per 100,000
for(j in 1:l.end) out.dta[j,6,i]  <- dta[(dta$Country == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Deaths.Daily"]       # New COVID deaths
for(j in 1:l.end) out.dta[j,7,i]  <- dta[(dta$Country == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Total.Deaths"]       # Cumulative COVID deaths
for(j in 8:l.end) out.dta[j,8,i]  <- (out.dta[j,6,i] + out.dta[j-1,6,i] + out.dta[j-2,6,i] + out.dta[j-3,6,i] +          # 7 Day Moving Average of COVID Deaths
out.dta[j-4,6,i] + out.dta[j-5,6,i] + out.dta[j-6,6,i])/7.0                        #
for(j in 1:l.end) out.dta[j,9,i]  <- dta[(dta$Country == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Death.Rate"]         # COVID death rate per 100,000
for(j in 1:l.end) out.dta[j,10,i] <- out.dta[j,5,i]                                                                      # Speed - Rate per 100,000
for(j in 2:l.end) out.dta[j,11,i] <- out.dta[j,5,i] - out.dta[j-1,5,i]                                                   # Change in speed
for(j in 8:l.end) out.dta[j,12,i] <- (out.dta[j,11,i] + out.dta[j-1,11,i] + out.dta[j-2,11,i] + out.dta[j-3,11,i] +      # Average Acceleration over the past 7 days
out.dta[j-4,11,i] + out.dta[j-5,11,i] + out.dta[j-6,11,i])/7.0                      #
for(j in 3:l.end) out.dta[j,13,i] <- out.dta[j,11,i] - out.dta[j-1,11,i]                                                 # Change in chang for Jerk
for(j in 9:l.end) out.dta[j,14,i] <- (out.dta[j,13,i] + out.dta[j-1,13,i] + out.dta[j-2,13,i] + out.dta[j-3,13,i] +      # Computing the Jerk
out.dta[j-4,13,i] + out.dta[j-5,13,i] + out.dta[j-6,13,i])/7.0                      #
for(j in 1:l.end) out.dta[j,17,i] <- dta[(dta$Country == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"RecentWeek"]         # Dummy variable for last two weeks
for(j in 8:l.end) out.dta[j,15,i] <- (gmm0$coefficients[1]+gmm0$coefficients[4]*out.dta[j,17,i])*out.dta[j-1,5,i]        # 1 day persistance effect
for(j in 8:l.end) out.dta[j,16,i] <- (gmm0$coefficients[2]+gmm0$coefficients[5]*out.dta[j,17,i])*out.dta[j-7,5,i]        # 7 day persistence effect
}                                                                                                                          #
#
#                                                                                                                              #
# -------------------------------------------------- Regional Aggregates ------------------------------------------------------#
#                                                                                                                              #
reg.pop <- 0                                                                                                               #
for(i in 1:length(cntlst)) reg.pop <- reg.pop + dta[(dta$Country == cntlst[i] & dta$Date == first.date),"Population.100K"] #
reg.totals <- length(cntlst.2)                                                                                             # Region Total Column
for(j in 1:l.end) out.dta[j,1,reg.totals] <- out.dates[j]                                                                  # Region Total Date
for(j in 1:l.end) out.dta[j,2,reg.totals] <- sum(out.dta[j,2,])                                                            # Region Total New Cases
for(j in 1:l.end) out.dta[j,3,reg.totals] <- sum(out.dta[j,3,])                                                            # Region Total Cumulative Cases
for(j in 8:l.end) out.dta[j,4,reg.totals] <- (out.dta[j,2,reg.totals] + out.dta[j-1,2,reg.totals] +                        # Region Total 7 Day Moving Average
out.dta[j-2,2,reg.totals] + out.dta[j-3,2,reg.totals] +                      #
out.dta[j-4,2,reg.totals] + out.dta[j-5,2,reg.totals] +                      #
out.dta[j-6,2,i])/7.0                                                        # 7 Day Moving Average of New Cases
for(j in 1:l.end) out.dta[j,5,reg.totals] <- out.dta[j,2,reg.totals]/reg.pop                                               # Rate of New Infections per 100,000
for(j in 1:l.end) out.dta[j,6,reg.totals] <- sum(out.dta[j,6,])                                                            # Region New COVID Deaths
for(j in 1:l.end) out.dta[j,7,reg.totals] <- sum(out.dta[j,7,])                                                            # Region Cumulative COVID Deaths
for(j in 8:l.end) out.dta[j,8,reg.totals] <- (out.dta[j,6,reg.totals] + out.dta[j-1,6,reg.totals] +                        # 7 Day Moving Average of COVID Deaths
out.dta[j-2,6,reg.totals] + out.dta[j-3,6,reg.totals] +                      #
out.dta[j-4,6,reg.totals] + out.dta[j-5,6,reg.totals] +                      #
out.dta[j-6,6,reg.totals])/7.0                                               #
for(j in 1:l.end) out.dta[j,9,reg.totals] <- out.dta[j,6,reg.totals]/reg.pop                                               # Region COVID Deaths per 100,000
for(j in 1:l.end) out.dta[j,10,reg.totals] <- out.dta[j,5,reg.totals]                                                      # Speed - Rate per 100,000
for(j in 3:l.end) out.dta[j,11,reg.totals] <- out.dta[j,5,reg.totals]-out.dta[j-1,5,reg.totals]                            # Change in Speed
for(j in 8:l.end) out.dta[j,12,reg.totals] <- (out.dta[j,11,reg.totals] + out.dta[j-1,11,reg.totals] +                     # Average Acceleration over the past 7 days
out.dta[j-2,11,reg.totals] + out.dta[j-3,11,reg.totals] +                   #
out.dta[j-4,11,reg.totals] + out.dta[j-5,11,reg.totals] +                   #
out.dta[j-6,11,reg.totals])/7.0                                             #
for(j in 3:l.end) out.dta[j,13,reg.totals] <- out.dta[j,11,reg.totals] - out.dta[j-1,11,reg.totals]                        # Change in chang for Jerk
for(j in 9:l.end) out.dta[j,14,reg.totals] <- (out.dta[j,13,reg.totals] + out.dta[j-1,13,reg.totals] +                     # Region Jerk
out.dta[j-2,13,reg.totals] + out.dta[j-3,13,reg.totals] +                   # Computing the Jerk
out.dta[j-4,13,reg.totals] + out.dta[j-5,13,reg.totals] +                   #
out.dta[j-6,13,reg.totals])/7.0                                             #
for(j in 1:l.end) out.dta[j,17,reg.totals] <- dta[(dta$Country == cntlst.2[1] & dta$Date == out.dta[j,1,i]),"RecentWeek"]  # Recent Week dummy for shift in parameters
for(j in 8:l.end) out.dta[j,15,reg.totals] <- (gmm0$coefficients[1]+gmm0$coefficients[4]*out.dta[j,17,reg.totals])*        # 1 day persistance effect
out.dta[j-1,5,reg.totals]                                                   #
for(j in 8:l.end) out.dta[j,16,reg.totals] <- (gmm0$coefficients[2]+gmm0$coefficients[5]*out.dta[j,17,reg.totals])*        # 7 day persistence effect
out.dta[j-7,5,reg.totals]                                                   #
#                                                                                                                              #
#                                                                                                                    ###########
# ----------------------------------- Write Output Table on Weekly Basis --------------------------------------------#
#                                                                                                                    #
out.tble <- matrix(0,11*length(cntlst.2),15)                                                                     #
n.date <- sort(seq(136,136-42,-7))                                                                               #
for(i in 1:length(cntlst.2)) {                                                                                   #
n.rws <- (seq(7*(i-1)+1,7*i,1))                                                                                #
for(j in 1:7) {                                                                                                #
out.tble[n.rws[j],1]  <- out.dta[n.date[j],1,i]                                                              # Date
out.tble[n.rws[j],2]  <- cntlst.2[i]                                                                         # Country
out.tble[n.rws[j],3]  <- out.dta[n.date[j],2,i]                                                              # New Cases
out.tble[n.rws[j],4]  <- out.dta[n.date[j],3,i]                                                              # Cumulative Cases
out.tble[n.rws[j],5]  <- out.dta[n.date[j],4,i]                                                              # 7 Day Moving Average Infections
out.tble[n.rws[j],6]  <- out.dta[n.date[j],5,i]                                                              # Rate of New Infections
out.tble[n.rws[j],7]  <- out.dta[n.date[j],6,i]                                                              # Deaths
out.tble[n.rws[j],8]  <- out.dta[n.date[j],7,i]                                                              # Cumulative Deaths
out.tble[n.rws[j],9]  <- out.dta[n.date[j],8,i]                                                              # 7 Day Moving Average of Deaths
out.tble[n.rws[j],10] <- out.dta[n.date[j],9,i]                                                              # Death Rate per 100,000
out.tble[n.rws[j],11] <- (out.dta[n.date[j],10,i] + out.dta[n.date[j]-1,10,i] + out.dta[n.date[j]-2,10,i] +  # Speed (Average)
out.dta[n.date[j]-3,10,i] + out.dta[n.date[j]-4,10,i] + out.dta[n.date[j]-5,10,i] + #
out.dta[n.date[j]-6,10,i])/7.0                                                     #
out.tble[n.rws[j],12] <- out.dta[n.date[j],12,i]                                                             # Acceleration
out.tble[n.rws[j],13] <- out.dta[n.date[j],14,i]                                                             # Jerk
out.tble[n.rws[j],14] <- (out.dta[n.date[j],15,i] + out.dta[n.date[j]-1,15,i] + out.dta[n.date[j]-2,15,i] +  # 1 Day Persistence
out.dta[n.date[j]-3,15,i] + out.dta[n.date[j]-4,15,i] + out.dta[n.date[j]-5,15,i] + #
out.dta[n.date[j]-6,15,i])/7.0                                                     #
out.tble[n.rws[j],15] <- (out.dta[n.date[j],16,i] + out.dta[n.date[j]-1,16,i] + out.dta[n.date[j]-2,16,i] +  # 7 Day Persistence
out.dta[n.date[j]-3,16,i] + out.dta[n.date[j]-4,16,i] + out.dta[n.date[j]-5,16,i] + #
out.dta[n.date[j]-6,16,i])/7.0                                                     #
}                                                                                                              #
}                                                                                                                #
#
write.csv(file=paste(file.Label,".csv"),out.tble)                                                                #
#
# End of country                                                                                                     #
######################################################################################################################
#
} else if(regions[n.region] == "North America") {                                                                  #
#
######################################################################################################################
# North America                                                                                                      #
# -- United States                                                                                                   #
dta <- full.dta[(full.dta$Region == regions[n.region] & full.dta$Country == "United States"),]                   #
dta <- dta[dta$State.Province != "",]                                                                            #
states <- as.character(unique(dta$State.Province))                                                               #
dta$R.Date <- as.Date(dta$Date,format="%m/%d/%Y")                                                                #
d0 <- as.Date(0,origin="1899-12-30")                                                                             #
dta$Date <- as.numeric(dta$R.Date - d0)                                                                          #
# Set First and last date for estimation purposes                                                                #
dates <- sort(unique(dta$Date))                                                                                  # List of dates in the dataset
last.date <- dates[length(dates)]                                                                                # End of period for analysis
first.date <- dates[length(dates)-120]                                                                           #
# Create test values to see that the country can be added                                                            #
test.Stats <- lapply(states,function(i) list(mean(dta[dta$State.Province == i,"Population.100K"]),               # S[1] - mean of Population
mean(dta[dta$State.Province == i,"Cases.Daily"]),                   # s[2] - mean of Positive Daily
mean(dta[dta$State.Province == i,"Tests.Daily"])))                  # s[3] - mean of Tests Daily
# Loop to drop suspect states/provinces                                                                              #
if(exists("drp.lst"))rm(drp.lst)                                                                                 # drp.lst - list of countries to be dropped
icatch <- 0                                                                                                      # Drop if Population is zero or missing ("NA")
for(i in 1:length(states)) {                                                                                     # Drop if Positive Daily is zero or missing ("NA")
if(is.na(test.Stats[[i]][[1]]) == TRUE | test.Stats[[i]][1] == 0 | is.na(test.Stats[[i]][[2]]) == TRUE |       # Drop if Tests Daily is zero or missing ("NA")
test.Stats[[i]][[2]] == 0 | is.na(test.Stats[[i]][[3]]) == TRUE | test.Stats[[i]][[3]] == 0) {              #
dta <- dta[dta$State.Province != states[i],]                                                                 #
if(icatch==0) drp.lst <- i else drp.lst <- rbind(drp.lst,i)                                                  #
icatch <- icatch +1                                                                                          #
}                                                                                                              #
}                                                                                                                #
if(exists("drp.lst")) states <- as.character(states[-drp.lst])                                                   # Drop suspect states/provinces
cntlst.2 <- append(states,"Region")                                                                              #
#
######################################################################################################################
# Compute basic data transformations                                                                                 #
#
dta$Pos.Rate   <- dta$Cases.Daily.Rate                                                                           # Pos.Rate - new infections per 100,000
dta$Test.Rate  <- dta$Tests.Daily.Rate                                                                           # Test.Rate - new tests per 100,000
dta$Cum.Tests  <- dta$Total.Tests.Rate                                                                           # Cum.Tests - cumulative tests per 100,000
dta$Cum.Cases  <- dta$Total.Cases.Rate                                                                           # Cumulative cases
dta$Death.Rate <- dta$Deaths.Daily.Rate                                                                          # Death Rate
dta$Cum.Deaths <- dta$Total.Deaths.Rate                                                                          # Cumulative Death
dta$Weekend    <- 0                                                                                              # Setup whether the day is a weekend
dta$Trend      <- 0                                                                                              # Setup a basic trend data set
dta$RecentWeek <- 0                                                                                              #
for(i in 1:nrow(dta)) {                                                                                          # Loop through complete dataset
if(isWeekend(dta$R.Date[i]) == TRUE) dta$Weekend[i] <- 1                                                       # Set Weekend = 1 if the day is a weekend
dta$Trend[i] <- dta$Date[i] - dates[1]                                                                         # Compute the trend based on Excel data variable
if(dta$Date[i] >= (last.date - 15)) dta$RecentWeek[i] <- 1                                                     # Set change two weeks before last date
}                                                                                                                #
dta$Recent.PosRate  <- dta$Pos.Rate*dta$RecentWeek                                                               #
dta$TestRate.Sq     <- dta$Test.Rate^2                                                                           #
#
######################################################################################################################
# Econometrics of COVID model                                                                                        #
#
p.dta <- pdata.frame(dta[dta$Date >= (first.date + 59),],index=c("State.Province","Date"))                       # Create a panel dataset from the original data
#
#                                                                                                                    #
# --------------------------------------- DPD estimation ------------------------------------------------------------#
#                                                                                                                    #
#
gmm0 <- pgmm(Pos.Rate ~ lag(Pos.Rate,c(1,7)) + RecentWeek + lag(Recent.PosRate,c(1,7)) + Test.Rate +           #
Cum.Tests + Weekend | Trend + I(Trend^2) + lag(Pos.Rate,8:11) | lag(Pos.Rate,2:3),     #
data=p.dta,effect="individual",model="onestep", transformation="ld",fsm="I",           #
na.action=omit,digits=10,robust=TRUE)                                                  #
sink(paste("United States - GMM-",Sys.Date(),".txt"))                                                         #
print(summary(gmm0))                                                                                           # Print results of DPD estimation
sink()                                                                                                         #
#                                                                                                                    #
######################################################################################################################
ibeg <- first.date - 15                                                                                        # First date for constructing of the surveillance table
iend <- last.date                                                                                              # Last date for construction of the surveillance table
l.end <- iend-ibeg+1                                                                                           # End point of loops
out.dates    <- seq(ibeg,iend,1)                                                                               # Sequence of output dates
out.dta      <- matrix(0,length(out.dates),(length(cntlst.2)*17))                                              # Output data
dim(out.dta) <- c(length(out.dates),17,length(cntlst.2))                                                       # 3 - dimensional array
for(i in 1:(length(cntlst.2)-1)) {                                                                             #
for(j in 1:l.end) out.dta[j,1,i]  <- out.dates[j]                                                            # Sample Date
for(j in 1:l.end) {                                                                                          # New Cases
out.dta[j,2,i]  <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Cases.Daily"]}    #
for(j in 1:l.end) {                                                                                          # Cumulative Cases
out.dta[j,3,i]  <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Total.Cases"]}    #
for(j in 8:l.end) {                                                                                          # 7 Day Moving Average of New Cases
out.dta[j,4,i]  <- (out.dta[j,2,i] + out.dta[j-1,2,i] + out.dta[j-2,2,i] + out.dta[j-3,2,i] +              #
out.dta[j-4,2,i] + out.dta[j-5,2,i] + out.dta[j-6,2,i])/7.0}                           #
for(j in 1:l.end) {                                                                                          # Rate of new infections per 100,000
out.dta[j,5,i]  <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Pos.Rate"]}       #
for(j in 1:l.end) {                                                                                          # New COVID deaths
out.dta[j,6,i]  <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Deaths.Daily"]}   #
for(j in 1:l.end) {                                                                                          # Cumulative COVID deaths
out.dta[j,7,i]  <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Total.Deaths"]}   #
for(j in 8:l.end) out.dta[j,8,i]  <- (out.dta[j,6,i] + out.dta[j-1,6,i] + out.dta[j-2,6,i] +                 # 7 Day Moving Average of Deaths
out.dta[j-3,6,i] + out.dta[j-4,6,i] + out.dta[j-5,6,i] +               #
out.dta[j-6,6,i])/7.0                                                  #
for(j in 1:l.end) {                                                                                          # COVID death rate per 100,000
out.dta[j,9,i]  <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Death.Rate"] }    #
for(j in 1:l.end) out.dta[j,10,i] <- out.dta[j,5,i]                                                          # Speed - Rate per 100,000
for(j in 2:l.end) out.dta[j,11,i] <- out.dta[j,5,i] - out.dta[j-1,5,i]                                       # Change in speed
for(j in 8:l.end) out.dta[j,12,i] <- (out.dta[j,11,i] + out.dta[j-1,11,i] + out.dta[j-2,11,i] +              # Average Acceleration over the past 7 days
out.dta[j-3,11,i] + out.dta[j-4,11,i] + out.dta[j-5,11,i] +            #
out.dta[j-6,11,i])/7.0                                                 #
for(j in 3:l.end) out.dta[j,13,i] <- out.dta[j,11,i] - out.dta[j-1,11,i]                                     # Change in chang for Jerk
for(j in 9:l.end) out.dta[j,14,i] <- (out.dta[j,13,i] + out.dta[j-1,13,i] + out.dta[j-2,13,i] +              # Computing the Jerk
out.dta[j-3,13,i] + out.dta[j-4,13,i] + out.dta[j-5,13,i] +            #
out.dta[j-6,13,i])/7.0                                                 #
for(j in 1:l.end) {                                                                                          # Dummy variable for last two weeks
out.dta[j,17,i] <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"RecentWeek"] }    # Recent Week dummy
for(j in 8:l.end) out.dta[j,15,i] <- (gmm0$coefficients[1]+gmm0$coefficients[4]*out.dta[j,17,i])*            # 1 day persistance effect
out.dta[j-1,5,i]                                                       #
for(j in 8:l.end) out.dta[j,16,i] <- (gmm0$coefficients[2]+gmm0$coefficients[5]*out.dta[j,17,i])*            # 7 day persistence effect
out.dta[j-7,5,i]                                                       #
}                                                                                                              #
#
#                                                                                                                    #
# --------------------------------------------- Regional Aggregates -------------------------------------------------#
#                                                                                                                    #
reg.pop <- 0                                                                                                   #
for(i in 1:length(states)) {                                                                                   #
reg.pop <- reg.pop + dta[(dta$State.Province == states[i] & dta$Date == first.date),"Population.100K"] }   #
reg.totals <- length(cntlst.2)                                                                                 # Region Total Column
for(j in 1:l.end) out.dta[j,1,reg.totals] <- out.dates[j]                                                      # Region Total Date
for(j in 1:l.end) out.dta[j,2,reg.totals] <- sum(out.dta[j,2,])                                                # Region Total New Cases
for(j in 1:l.end) out.dta[j,3,reg.totals] <- sum(out.dta[j,3,])                                                # Region Total Cumulative Cases
for(j in 8:l.end) out.dta[j,4,reg.totals] <- (out.dta[j,2,reg.totals] + out.dta[j-1,2,reg.totals] +            # Region Total 7 Day Moving Average
out.dta[j-2,2,reg.totals] + out.dta[j-3,2,reg.totals] +          #
out.dta[j-4,2,reg.totals] + out.dta[j-5,2,reg.totals] +          #
out.dta[j-6,2,i])/7.0                                            # 7 Day Moving Average of New Cases
for(j in 1:l.end) out.dta[j,5,reg.totals] <- out.dta[j,2,reg.totals]/reg.pop                                   # Rate of New Infections per 100,000
for(j in 1:l.end) out.dta[j,6,reg.totals] <- sum(out.dta[j,6,])                                                # Region New COVID Deaths
for(j in 1:l.end) out.dta[j,7,reg.totals] <- sum(out.dta[j,7,])                                                # Region Cumulative COVID Deaths
for(j in 8:l.end) out.dta[j,8,reg.totals] <- (out.dta[j,6,reg.totals] + out.dta[j-1,6,reg.totals] +            # 7 Day Moving Average of COVID Deaths
out.dta[j-2,6,reg.totals] + out.dta[j-3,6,reg.totals] +          #
out.dta[j-4,6,reg.totals] + out.dta[j-5,6,reg.totals] +          #
out.dta[j-6,6,reg.totals])/7.0                                   #
for(j in 1:l.end) out.dta[j,9,reg.totals] <- out.dta[j,6,reg.totals]/reg.pop                                   # Region COVID Deaths per 100,000
for(j in 1:l.end) out.dta[j,10,reg.totals] <- out.dta[j,5,reg.totals]                                          # Speed - Rate per 100,000
for(j in 3:l.end) out.dta[j,11,reg.totals] <- out.dta[j,5,reg.totals]-out.dta[j-1,5,reg.totals]                # Change in Speed
for(j in 8:l.end) out.dta[j,12,reg.totals] <- (out.dta[j,11,reg.totals] + out.dta[j-1,11,reg.totals] +         # Average Acceleration over the past 7 days
out.dta[j-2,11,reg.totals] + out.dta[j-3,11,reg.totals] +       #
out.dta[j-4,11,reg.totals] + out.dta[j-5,11,reg.totals] +       #
out.dta[j-6,11,reg.totals])/7.0                                 #
for(j in 3:l.end) out.dta[j,13,reg.totals] <- out.dta[j,11,reg.totals] - out.dta[j-1,11,reg.totals]            # Change in chang for Jerk
for(j in 9:l.end) out.dta[j,14,reg.totals] <- (out.dta[j,13,reg.totals] + out.dta[j-1,13,reg.totals] +         # Region Jerk
out.dta[j-2,13,reg.totals] + out.dta[j-3,13,reg.totals] +       # Computing the Jerk
out.dta[j-4,13,reg.totals] + out.dta[j-5,13,reg.totals] +       #
out.dta[j-6,13,reg.totals])/7.0                                 #
for(j in 1:l.end) {                                                                                            # Recent Week dummy for shift in parameters
out.dta[j,17,reg.totals] <- dta[(dta$State.Province == cntlst.2[1] & dta$Date == out.dta[j,1,i]),            #
"RecentWeek"] }                                                              #
for(j in 8:l.end) {                                                                                            # 1 day persistance effect
out.dta[j,15,reg.totals] <- (gmm0$coefficients[1]+gmm0$coefficients[4]*out.dta[j,17,reg.totals])*            #
out.dta[j-1,5,reg.totals]}                                                      #
for(j in 8:l.end) {                                                                                            # 7 day persistence effect
out.dta[j,16,reg.totals] <- (gmm0$coefficients[2]+gmm0$coefficients[5]*out.dta[j,17,reg.totals])*            #
out.dta[j-7,5,reg.totals]}                                                      #
#                                                                                                                    #
# ----------------------------------- Write Output Table on Weekly Basis --------------------------------------------#
#                                                                                                                    #
out.tble <- matrix(0,7*length(cntlst.2),15)                                                                      #
n.date <- sort(seq(136,136-42,-7))                                                                               #
for(i in 1:length(cntlst.2)) {                                                                                   #
n.rws <- (seq(7*(i-1)+1,7*i,1))                                                                                #
for(j in 1:7) {                                                                                                #
out.tble[n.rws[j],1]  <- out.dta[n.date[j],1,i]                                                              # Date
out.tble[n.rws[j],2]  <- cntlst.2[i]                                                                         # Country
out.tble[n.rws[j],3]  <- out.dta[n.date[j],2,i]                                                              # New Cases
out.tble[n.rws[j],4]  <- out.dta[n.date[j],3,i]                                                              # Cumulative Cases
out.tble[n.rws[j],5]  <- out.dta[n.date[j],4,i]                                                              # 7 Day Moving Average Infections
out.tble[n.rws[j],6]  <- out.dta[n.date[j],5,i]                                                              # Rate of New Infections
out.tble[n.rws[j],7]  <- out.dta[n.date[j],6,i]                                                              # Deaths
out.tble[n.rws[j],8]  <- out.dta[n.date[j],7,i]                                                              # Cumulative Deaths
out.tble[n.rws[j],9]  <- out.dta[n.date[j],8,i]                                                              # 7 Day Moving Average of Deaths
out.tble[n.rws[j],10] <- out.dta[n.date[j],9,i]                                                              # Death Rate per 100,000
out.tble[n.rws[j],11] <- (out.dta[n.date[j],10,i] + out.dta[n.date[j]-1,10,i] + out.dta[n.date[j]-2,10,i] +  # Speed (Average)
out.dta[n.date[j]-3,10,i] + out.dta[n.date[j]-4,10,i] + out.dta[n.date[j]-5,10,i] + #
out.dta[n.date[j]-6,10,i])/7.0                                                     #
out.tble[n.rws[j],12] <- out.dta[n.date[j],12,i]                                                             # Acceleration
out.tble[n.rws[j],13] <- out.dta[n.date[j],14,i]                                                             # Jerk
out.tble[n.rws[j],14] <- (out.dta[n.date[j],15,i] + out.dta[n.date[j]-1,15,i] + out.dta[n.date[j]-2,15,i] +  # 1 Day Persistence
out.dta[n.date[j]-3,15,i] + out.dta[n.date[j]-4,15,i] + out.dta[n.date[j]-5,15,i] + #
out.dta[n.date[j]-6,15,i])/7.0                                                     #
out.tble[n.rws[j],15] <- (out.dta[n.date[j],16,i] + out.dta[n.date[j]-1,16,i] + out.dta[n.date[j]-2,16,i] +  # 7 Day Persistence
out.dta[n.date[j]-3,16,i] + out.dta[n.date[j]-4,16,i] + out.dta[n.date[j]-5,16,i] + #
out.dta[n.date[j]-6,16,i])/7.0                                                     #
}                                                                                                              #
}                                                                                                                #
#
#                                                                                                                    #
write.csv(file=paste("United States -Results-",Sys.Date(),".csv"),out.tble)                                      #
#                                                                                                                    #
# End of United States                                                                                               #
######################################################################################################################
# -- Canada                                                                                                          #
dta <- full.dta[full.dta$Country == "Canada",]                                                                   #
dta <- dta[dta$State.Province != "",]                                                                            #
states <- as.character(unique(dta$State.Province))                                                               #
dta$R.Date <- as.Date(dta$Date,format="%m/%d/%Y")                                                                #
d0 <- as.Date(0,origin="1899-12-30")                                                                             #
dta$Date <- as.numeric(dta$R.Date - d0)                                                                          #
# Set First and last date for estimation purposes                                                                #
dates <- sort(unique(dta$Date))                                                                                  # List of dates in the dataset
last.date <- dates[length(dates)]                                                                                # End of period for analysis
first.date <- dates[length(dates)-120]                                                                           #
# Create test values to see that the country can be added                                                        #
test.Stats <- lapply(states,function(i) list(mean(dta[dta$State.Province == i,"Population.100K"]),               # S[1] - mean of Population
mean(dta[dta$State.Province == i,"Cases.Daily"]),                   # s[2] - mean of Positive Daily
mean(dta[dta$State.Province == i,"Tests.Daily"])))                  # s[3] - mean of Tests Daily
# Loop to drop suspect states/provinces                                                                              #
if(exists("drp.lst"))rm(drp.lst)                                                                                 # drp.lst - list of countries to be dropped
icatch <- 0                                                                                                      # Drop if Population is zero or missing ("NA")
for(i in 1:length(states)) {                                                                                     # Drop if Positive Daily is zero or missing ("NA")
if(is.na(test.Stats[[i]][[1]]) == TRUE | test.Stats[[i]][1] == 0 | is.na(test.Stats[[i]][[2]]) == TRUE |       # Drop if Tests Daily is zero or missing ("NA")
test.Stats[[i]][[2]] == 0 | is.na(test.Stats[[i]][[3]]) == TRUE | test.Stats[[i]][[3]] == 0) {              #
dta <- dta[dta$State.Province != states[i],]                                                                 #
if(icatch==0) drp.lst <- i else drp.lst <- rbind(drp.lst,i)                                                  #
icatch <- icatch +1                                                                                          #
}                                                                                                              #
}                                                                                                                #
if(exists("drp.lst")) states <- as.character(states[-drp.lst])                                                   # Drop suspect states/provinces
cntlst.2 <- append(states,"Region")                                                                              #
######################################################################################################################
# Compute basic data transformations                                                                                 #
#
dta$Pos.Rate   <- dta$Cases.Daily.Rate                                                                           # Pos.Rate - new infections per 100,000
dta$Test.Rate  <- dta$Tests.Daily.Rate                                                                           # Test.Rate - new tests per 100,000
dta$Cum.Tests  <- dta$Total.Tests.Rate                                                                           # Cum.Tests - cumulative tests per 100,000
dta$Cum.Cases  <- dta$Total.Cases.Rate                                                                           # Cumulative cases
dta$Death.Rate <- dta$Deaths.Daily.Rate                                                                          # Death Rate
dta$Cum.Deaths <- dta$Total.Deaths.Rate                                                                          # Cumulative Death
dta$Weekend    <- 0                                                                                              # Setup whether the day is a weekend
dta$Trend      <- 0                                                                                              # Setup a basic trend data set
dta$RecentWeek <- 0                                                                                              #
for(i in 1:nrow(dta)) {                                                                                          # Loop through complete dataset
if(isWeekend(dta$R.Date[i]) == TRUE) dta$Weekend[i] <- 1                                                       # Set Weekend = 1 if the day is a weekend
dta$Trend[i] <- dta$Date[i] - dates[1]                                                                         # Compute the trend based on Excel data variable
if(dta$Date[i] >= (last.date - 15)) dta$RecentWeek[i] <- 1                                                     # Set change two weeks before last date
}                                                                                                                #
dta$Recent.PosRate  <- dta$Pos.Rate*dta$RecentWeek                                                               #
dta$TestRate.Sq     <- dta$Test.Rate^2                                                                           #
#
######################################################################################################################
# Econometrics of COVID model                                                                                        #
#
p.dta <- pdata.frame(dta[dta$Date >= (first.date + 59),],index=c("State.Province","Date"))                       # Create a panel dataset from the original data
#
#                                                                                                                    #
# --------------------------------------- DPD estimation ------------------------------------------------------------#
#                                                                                                                    #
gmm0 <- pgmm(Pos.Rate ~ lag(Pos.Rate,c(1,7)) + RecentWeek + lag(Recent.PosRate,c(1,7)) + Test.Rate +             #
Cum.Tests + Weekend | Trend + I(Trend^2) + lag(Pos.Rate,8:11) | lag(Pos.Rate,2:3),     #
data=p.dta,effect="individual",model="onestep", transformation="ld",fsm="I",           #
na.action=omit,digits=10,robust=TRUE)                                                  #
sink(paste("Canada - GMM-",Sys.Date(),".txt"))                                                                   #
print(summary(gmm0))                                                                                             # Print results of DPD estimation
sink()                                                                                                           #
#                                                                                                                    #
######################################################################################################################
ibeg <- first.date - 15                                                                                          # First date for constructing of the surveillance table
iend <- last.date                                                                                                # Last date for construction of the surveillance table
l.end <- iend-ibeg+1                                                                                             # End point of loops
out.dates    <- seq(ibeg,iend,1)                                                                                 # Sequence of output dates
out.dta      <- matrix(0,length(out.dates),(length(cntlst.2)*17))                                                # Output data
dim(out.dta) <- c(length(out.dates),17,length(cntlst.2))                                                         # 3 - dimensional array
for(i in 1:(length(cntlst.2)-1)) {                                                                               #
for(j in 1:l.end) out.dta[j,1,i]  <- out.dates[j]                                                              # Sample Date
for(j in 1:l.end) {                                                                                            # New Cases
out.dta[j,2,i]  <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Cases.Daily"]}      #
for(j in 1:l.end) {                                                                                            # Cumulative Cases
out.dta[j,3,i]  <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Total.Cases"]}      #
for(j in 8:l.end) {                                                                                            # 7 Day Moving Average of New Cases
out.dta[j,4,i]  <- (out.dta[j,2,i] + out.dta[j-1,2,i] + out.dta[j-2,2,i] + out.dta[j-3,2,i] +                #
out.dta[j-4,2,i] + out.dta[j-5,2,i] + out.dta[j-6,2,i])/7.0}                           #
for(j in 1:l.end) {                                                                                            # Rate of new infections per 100,000
out.dta[j,5,i]  <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Pos.Rate"]}         #
for(j in 1:l.end) {                                                                                            # New COVID deaths
out.dta[j,6,i]  <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Deaths.Daily"]}     #
for(j in 1:l.end) {                                                                                            # Cumulative COVID deaths
out.dta[j,7,i]  <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Total.Deaths"]}     #
for(j in 8:l.end) out.dta[j,8,i]  <- (out.dta[j,6,i] + out.dta[j-1,6,i] + out.dta[j-2,6,i] +                   # 7 Day Moving Average of Deaths
out.dta[j-3,6,i] + out.dta[j-4,6,i] + out.dta[j-5,6,i] +               #
out.dta[j-6,6,i])/7.0                                                  #
for(j in 1:l.end) {                                                                                            # COVID death rate per 100,000
out.dta[j,9,i]  <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"Death.Rate"] }      #
for(j in 1:l.end) out.dta[j,10,i] <- out.dta[j,5,i]                                                            # Speed - Rate per 100,000
for(j in 2:l.end) out.dta[j,11,i] <- out.dta[j,5,i] - out.dta[j-1,5,i]                                         # Change in speed
for(j in 8:l.end) out.dta[j,12,i] <- (out.dta[j,11,i] + out.dta[j-1,11,i] + out.dta[j-2,11,i] +                # Average Acceleration over the past 7 days
out.dta[j-3,11,i] + out.dta[j-4,11,i] + out.dta[j-5,11,i] +            #
out.dta[j-6,11,i])/7.0                                                 #
for(j in 3:l.end) out.dta[j,13,i] <- out.dta[j,11,i] - out.dta[j-1,11,i]                                       # Change in chang for Jerk
for(j in 9:l.end) out.dta[j,14,i] <- (out.dta[j,13,i] + out.dta[j-1,13,i] + out.dta[j-2,13,i] +                # Computing the Jerk
out.dta[j-3,13,i] + out.dta[j-4,13,i] + out.dta[j-5,13,i] +            #
out.dta[j-6,13,i])/7.0                                                 #
for(j in 1:l.end) {                                                                                            # Dummy variable for last two weeks
out.dta[j,17,i] <- dta[(dta$State.Province == cntlst.2[i] & dta$Date == out.dta[j,1,i]),"RecentWeek"] }      # Recent Week dummy
for(j in 8:l.end) out.dta[j,15,i] <- (gmm0$coefficients[1]+gmm0$coefficients[4]*out.dta[j,17,i])*              # 1 day persistance effect
out.dta[j-1,5,i]                                                         #
for(j in 8:l.end) out.dta[j,16,i] <- (gmm0$coefficients[2]+gmm0$coefficients[5]*out.dta[j,17,i])*              # 7 day persistence effect
out.dta[j-7,5,i]                                                         #
}                                                                                                                #
#
#                                                                                                                    #
# --------------------------------------------- Regional Aggregates -------------------------------------------------#
#                                                                                                                    #
reg.pop <- 0                                                                                                     #
for(i in 1:length(states)) {                                                                                     #
reg.pop <- reg.pop + dta[(dta$State.Province == states[i] & dta$Date == first.date),"Population.100K"] }       #
reg.totals <- length(cntlst.2)                                                                                   # Region Total Column
for(j in 1:l.end) out.dta[j,1,reg.totals] <- out.dates[j]                                                        # Region Total Date
for(j in 1:l.end) out.dta[j,2,reg.totals] <- sum(out.dta[j,2,])                                                  # Region Total New Cases
for(j in 1:l.end) out.dta[j,3,reg.totals] <- sum(out.dta[j,3,])                                                  # Region Total Cumulative Cases
for(j in 8:l.end) out.dta[j,4,reg.totals] <- (out.dta[j,2,reg.totals] + out.dta[j-1,2,reg.totals] +              # Region Total 7 Day Moving Average
out.dta[j-2,2,reg.totals] + out.dta[j-3,2,reg.totals] +          #
out.dta[j-4,2,reg.totals] + out.dta[j-5,2,reg.totals] +          #
out.dta[j-6,2,i])/7.0                                            # 7 Day Moving Average of New Cases
for(j in 1:l.end) out.dta[j,5,reg.totals] <- out.dta[j,2,reg.totals]/reg.pop                                     # Rate of New Infections per 100,000
for(j in 1:l.end) out.dta[j,6,reg.totals] <- sum(out.dta[j,6,])                                                  # Region New COVID Deaths
for(j in 1:l.end) out.dta[j,7,reg.totals] <- sum(out.dta[j,7,])                                                  # Region Cumulative COVID Deaths
for(j in 8:l.end) out.dta[j,8,reg.totals] <- (out.dta[j,6,reg.totals] + out.dta[j-1,6,reg.totals] +              # 7 Day Moving Average of COVID Deaths
out.dta[j-2,6,reg.totals] + out.dta[j-3,6,reg.totals] +          #
out.dta[j-4,6,reg.totals] + out.dta[j-5,6,reg.totals] +          #
out.dta[j-6,6,reg.totals])/7.0                                   #
for(j in 1:l.end) out.dta[j,9,reg.totals] <- out.dta[j,6,reg.totals]/reg.pop                                     # Region COVID Deaths per 100,000
for(j in 1:l.end) out.dta[j,10,reg.totals] <- out.dta[j,5,reg.totals]                                            # Speed - Rate per 100,000
for(j in 3:l.end) out.dta[j,11,reg.totals] <- out.dta[j,5,reg.totals]-out.dta[j-1,5,reg.totals]                  # Change in Speed
for(j in 8:l.end) out.dta[j,12,reg.totals] <- (out.dta[j,11,reg.totals] + out.dta[j-1,11,reg.totals] +           # Average Acceleration over the past 7 days
out.dta[j-2,11,reg.totals] + out.dta[j-3,11,reg.totals] +       #
out.dta[j-4,11,reg.totals] + out.dta[j-5,11,reg.totals] +       #
out.dta[j-6,11,reg.totals])/7.0                                 #
for(j in 3:l.end) out.dta[j,13,reg.totals] <- out.dta[j,11,reg.totals] - out.dta[j-1,11,reg.totals]              # Change in chang for Jerk
for(j in 9:l.end) out.dta[j,14,reg.totals] <- (out.dta[j,13,reg.totals] + out.dta[j-1,13,reg.totals] +           # Region Jerk
out.dta[j-2,13,reg.totals] + out.dta[j-3,13,reg.totals] +       # Computing the Jerk
out.dta[j-4,13,reg.totals] + out.dta[j-5,13,reg.totals] +       #
out.dta[j-6,13,reg.totals])/7.0                                 #
for(j in 1:l.end) {                                                                                              # Recent Week dummy for shift in parameters
out.dta[j,17,reg.totals] <- dta[(dta$State.Province == cntlst.2[1] & dta$Date == out.dta[j,1,1]),"RecentWeek"] } #
for(j in 8:l.end) {                                                                                              # 1 day persistance effect
out.dta[j,15,reg.totals] <- (gmm0$coefficients[1]+gmm0$coefficients[4]*out.dta[j,17,reg.totals])*              #
out.dta[j-1,5,reg.totals]}                                                                                   #
for(j in 8:l.end) {                                                                                              # 7 day persistence effect
out.dta[j,16,reg.totals] <- (gmm0$coefficients[2]+gmm0$coefficients[5]*out.dta[j,17,reg.totals])*              #
out.dta[j-7,5,reg.totals]}                                                                                   #
#                                                                                                                    #
# ----------------------------------- Write Output Table on Weekly Basis --------------------------------------------#
#                                                                                                                    #
out.tble <- matrix(0,7*length(cntlst.2),15)                                                                      #
n.date <- sort(seq(136,136-42,-7))                                                                               #
for(i in 1:length(cntlst.2)) {                                                                                   #
n.rws <- (seq(7*(i-1)+1,7*i,1))                                                                                #
for(j in 1:7) {                                                                                                #
out.tble[n.rws[j],1]  <- out.dta[n.date[j],1,i]                                                              # Date
out.tble[n.rws[j],2]  <- cntlst.2[i]                                                                         # Country
out.tble[n.rws[j],3]  <- out.dta[n.date[j],2,i]                                                              # New Cases
out.tble[n.rws[j],4]  <- out.dta[n.date[j],3,i]                                                              # Cumulative Cases
out.tble[n.rws[j],5]  <- out.dta[n.date[j],4,i]                                                              # 7 Day Moving Average Infections
out.tble[n.rws[j],6]  <- out.dta[n.date[j],5,i]                                                              # Rate of New Infections
out.tble[n.rws[j],7]  <- out.dta[n.date[j],6,i]                                                              # Deaths
out.tble[n.rws[j],8]  <- out.dta[n.date[j],7,i]                                                              # Cumulative Deaths
out.tble[n.rws[j],9]  <- out.dta[n.date[j],8,i]                                                              # 7 Day Moving Average of Deaths
out.tble[n.rws[j],10] <- out.dta[n.date[j],9,i]                                                              # Death Rate per 100,000
out.tble[n.rws[j],11] <- (out.dta[n.date[j],10,i] + out.dta[n.date[j]-1,10,i] + out.dta[n.date[j]-2,10,i] +  # Speed (Average)
out.dta[n.date[j]-3,10,i] + out.dta[n.date[j]-4,10,i] + out.dta[n.date[j]-5,10,i] + #
out.dta[n.date[j]-6,10,i])/7.0                                                     #
out.tble[n.rws[j],12] <- out.dta[n.date[j],12,i]                                                             # Acceleration
out.tble[n.rws[j],13] <- out.dta[n.date[j],14,i]                                                             # Jerk
out.tble[n.rws[j],14] <- (out.dta[n.date[j],15,i] + out.dta[n.date[j]-1,15,i] + out.dta[n.date[j]-2,15,i] +  # 1 Day Persistence
out.dta[n.date[j]-3,15,i] + out.dta[n.date[j]-4,15,i] + out.dta[n.date[j]-5,15,i] + #
out.dta[n.date[j]-6,15,i])/7.0                                                     #
out.tble[n.rws[j],15] <- (out.dta[n.date[j],16,i] + out.dta[n.date[j]-1,16,i] + out.dta[n.date[j]-2,16,i] +  # 7 Day Persistence
out.dta[n.date[j]-3,16,i] + out.dta[n.date[j]-4,16,i] + out.dta[n.date[j]-5,16,i] + #
out.dta[n.date[j]-6,16,i])/7.0                                                     #
}                                                                                                              #
}                                                                                                                #
write.csv(file = paste("Canada -Results-",Sys.Date(),".csv"),out.tble)                                               #
#                                                                                                                    #
# End of Canada                                                                                                      #
######################################################################################################################
}
n.region <- n.region + 1
}
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
source('~/GitHub/Global-COVID-Surveillance/data/cleaned/GeneralGmmCode12-02-20Cases.R', echo=TRUE)
